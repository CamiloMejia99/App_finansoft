@model FNTC.Finansoft.Accounting.DTO.Nomina.ArchivoPlano

@{
    Layout = "~/Views/Shared/_Modal.cshtml";
    var action = (string)ViewBag.action;
    var boton = (string)ViewBag.boton;
    var TipoDato = @ViewBag.TipoDato;
    var Alineación = @ViewBag.Alineación;
    var Relleno = @ViewBag.Relleno;
    var ValPredeterminado = @ViewBag.ValPredeterminado;
}



@using (Html.BeginForm(action, "ArchivoPlano", new { area = "Nomina" }, FormMethod.Post, new { id = "theForm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="modalheadergeneral"><h4>Actualizar Archivos Planos</h4></div>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)
        @Html.HiddenFor(model => model.ORDEN)

        <div class="form-group">
            @Html.LabelFor(model => model.CLASEPLANO, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.CLASEPLANO, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CLASEPLANO, "", new { @class = "text-danger" })*@
                @Html.DropDownListFor(model => model.CLASEPLANO, new SelectList(@ViewBag.CP, "Id", "Nombre"), new { @class = "form-control" })

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TIPCAMPO, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.TIPCAMPO, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TIPCAMPO, "", new { @class = "text-danger" })*@
                @Html.DropDownListFor(model => model.TIPCAMPO, new SelectList(@ViewBag.TC, "Id", "NOMBRECAMPO"), new { @class = "form-control" })

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CONCEPTO, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CONCEPTO, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CONCEPTO, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TIPDATO, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.TIPDATO, new SelectList(TipoDato, "Value", "Text"), new { @class = "form-control", @required = "required", @id = "TIPDATO2" })
                @Html.HiddenFor(model => model.TIPDATO, new { @id = "TIPDATO1" })
                @Html.ValidationMessageFor(model => model.TIPDATO, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LONGITUD, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LONGITUD, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LONGITUD, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ALINEACION, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ALINEACION, new SelectList(Alineación, "Value", "Text"), new { @class = "form-control", @required = "required", @id = "ALINEACION2" })
                @Html.HiddenFor(model => model.ALINEACION, new { @id = "ALINEACION1" })
                @Html.ValidationMessageFor(model => model.ALINEACION, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RELLENO, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.RELLENO, new SelectList(Relleno, "Value", "Text"), new { @class = "form-control", @required = "required", @id = "RELLENO2" })
                @Html.HiddenFor(model => model.RELLENO, new { @id = "RELLENO1" })
                @Html.ValidationMessageFor(model => model.RELLENO, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VALPREDETERINADO, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.VALPREDETERINADO, new SelectList(ValPredeterminado, "Value", "Text"), new { @class = "form-control", @required = "required", @id = "VALPREDETERINADO2" })
                @Html.HiddenFor(model => model.VALPREDETERINADO, new { @id = "VALPREDETERINADO1" })
                @Html.ValidationMessageFor(model => model.VALPREDETERINADO, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DIGVALOR, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DIGVALOR, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DIGVALOR, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NUMDECIMALES, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NUMDECIMALES, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NUMDECIMALES, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.HiddenFor(model => model.ORDEN)

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
                <button type="button" id="close" class="btn btn-default" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i> Cerrar</button>

            </div>
        </div>
    </div>
}
<script>

    $(document).ready(function () {

        TIPDATO1 = $('#TIPDATO1').val()
        //alert(TIPOPLANO1);
        $("#TIPDATO2 option[value=" + TIPDATO1 + "]").attr("selected", true);

        ALINEACION1 = $('#ALINEACION1').val()
        $("#ALINEACION2 option[value=" + ALINEACION1 + "]").attr("selected", true);

        RELLENO1 = $('#RELLENO1').val()
        $("#RELLENO2 option[value=" + RELLENO1 + "]").attr("selected", true);

        VALPREDETERINADO1 = $('#VALPREDETERINADO1').val()
        $("#VALPREDETERINADO2 option[value=" + VALPREDETERINADO1 + "]").attr("selected", true);

    });
    //Al Ocultar el modal
    $(document.body).on('hidden.bs.modal', function () {
        $('#centro').removeData('bs.modal');
    });

    $("#theForm").submit(function (event) {
        event.preventDefault();

        $("#LONGITUD").prop("disabled", false);
        $("#ALINEACION2").prop("disabled", false);
        $("#RELLENO2").prop("disabled", false);
        $("#VALPREDETERINADO2").prop("disabled", false);
        $("#NUMDECIMALES").prop("disabled", false);
        $("#DIGVALOR").prop("disabled", false);
        var theForm = $(this);
        var theAction = theForm.attr("action");
        if (!theForm.valid()) {
            return false;
        }
        $.post('/Nomina/ArchivoPlanos/Edit', theForm.serialize())
            .done(function (result) {
                event.preventDefault();
                swal({
                    title: "",
                    type: "success",
                    text: "Datos Actualizados Correctamente..",
                    confirmButtonText: "Ok!",
                }, function () {

                    $("#close").click();
                });

            });
    });


</script>
<script>
    $(document).ready(function () {
        // $("#DIGVALOR").val("0");
        DIGVALOR1 = $('#DIGVALOR').val()
        VALPREDETERINADO2 = $('#VALPREDETERINADO2').val()

        if (VALPREDETERINADO2 == "NO") {
            $("#DIGVALOR").prop("disabled", true);
            $("#DIGVALOR").val("0");
        }
        $("#VALPREDETERINADO2").change(function () {

            var predeterminado = $("#VALPREDETERINADO2").val();
            if (predeterminado == "SI") {
                $("#DIGVALOR").prop("disabled", false);
                $("#DIGVALOR").val(DIGVALOR1);
            }
            else
                if (predeterminado == "NO") {
                    $("#DIGVALOR").prop("disabled", true);
                    $("#DIGVALOR").val("0");
                }
            // $('#NOMBRE').val("");

            // });
        });
    });

</script>
<script>
    $(document).ready(function () {

        var Plano = $("#CLASEPLANO").val();

        if (Plano != "") {
                    $('#mitabla tr').empty();
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("GetDatosPlano", "ArchivoPlanos")",
                        datatype: "Json",
                        data: { Plano: $('#CLASEPLANO').val() },
                        success: function (data) {
                            var Extension = (data[0]);
                            if (Extension == "EX") {
                                $("#LONGITUD").prop("disabled", true);
                                $("#LONGITUD").val("0");
                                $("#ALINEACION2").prop("disabled", true);
                                $("#ALINEACION2").val("IZQUIERDA");
                                $("#RELLENO2").prop("disabled", true);
                                $("#RELLENO2").val("BLANCOS");
                                $("#VALPREDETERINADO2").prop("disabled", true);
                                $("#VALPREDETERINADO2").val("NO");
                                $("#NUMDECIMALES").prop("disabled", true);
                                $("#NUMDECIMALES").val("0");
                                $("#DIGVALOR").prop("disabled", true);
                                $("#DIGVALOR").val("0");
                            }

                        }
                    });
                }
                else {
                    $('#Empresa').val("").trigger('chosen:updated');
                    swal({
                        title: "Alerta",
                        type: "info",
                        text: "Debe Seleccionar un Plano",
                    })

                }
        });

</script>
<script>
    $("#CLASEPLANO").change(function () {

        var Plano = $("#CLASEPLANO").val();

        if (Plano != "") {
                    $('#mitabla tr').empty();
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("GetDatosPlano", "ArchivoPlanos")",
                        datatype: "Json",
                        data: { Plano: $('#CLASEPLANO').val() },
                        success: function (data) {
                            var Extension = (data[0]);
                            if (Extension == "EX") {
                                $("#LONGITUD").prop("disabled", true);
                                $("#LONGITUD").val("0");
                                $("#ALINEACION2").prop("disabled", true);
                                $("#ALINEACION2").val("IZQUIERDA");
                                $("#RELLENO2").prop("disabled", true);
                                $("#RELLENO2").val("BLANCOS");
                                $("#VALPREDETERINADO2").prop("disabled", true);
                                $("#VALPREDETERINADO2").val("NO");
                                $("#NUMDECIMALES").prop("disabled", true);
                                $("#NUMDECIMALES").val("0");
                                $("#DIGVALOR").prop("disabled", true);
                                $("#DIGVALOR").val("0");
                            }
                            else {
                                $("#LONGITUD").prop("disabled", false);
                                $("#LONGITUD").val("");
                                $("#ALINEACION2").prop("disabled", false);
                                $("#ALINEACION2").val("");
                                $("#RELLENO2").prop("disabled", false);
                                $("#RELLENO2").val("");
                                $("#VALPREDETERINADO2").prop("disabled", false);
                                $("#VALPREDETERINADO2").val("");
                                $("#NUMDECIMALES").prop("disabled", false);
                                $("#NUMDECIMALES").val("");
                               // $("#DIGVALOR").prop("disabled", false);
                                $("#DIGVALOR").val("0");

                                //es por los disable que no los esta enviando
                            }
                        }
                    });
                }
                else {
                    $('#Empresa').val("").trigger('chosen:updated');
                    swal({
                        title: "Alerta",
                        type: "info",
                        text: "Debe Seleccionar un Plano",
                    })

                }
        });

</script>