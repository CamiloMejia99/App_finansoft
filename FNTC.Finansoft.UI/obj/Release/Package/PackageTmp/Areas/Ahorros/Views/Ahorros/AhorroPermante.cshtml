@using FNTC.Finansoft.DTO.Aportes
@using FNTC.Finansoft.DTO.Ahorros

@model DTOFichasAhorros

@{
    ViewBag.Title = "Ahorro Permante";

    Layout = "~/Views/Shared/_Layoutahorros.cshtml";
    DTOConfiguracionAhorros configuracionAhorros = ViewBag.ConfiguracionAhorros;
    DTOConfiguracionAportes configuracionAportes = ViewBag.ConfiguracionAportes;
}

<script src="~/Scripts/chosen.jquery.min.js"></script>

@section Styles{
    <link href="~/Content/css/jquery-ui.min.css" rel="stylesheet" />
    <link href="~/Content/css/chosen.css" rel="stylesheet" />
    <style>
        .ui-autocomplete {
            z-index: 5000;
        }
    </style>
}


<div class="container" style="margin-top:2%; background: rgb(248, 248, 248);">
    <ul class="col-md-offset-2 nav nav-tabs" style="margin-top:2%;border: none; margin-left: 118px;">
        <li><a href="/Ahorros/Ahorros/ConfiguracionFAP" class="tabsnota"><i class="fa fa-file-text" aria-hidden="true"></i> Configuracion</a></li>
        <li class="active"><a data-toggle="tab" href="#menu1" class="tabsnota"><i class="fa fa-calculator" aria-hidden="true"></i> Fichas Ahorro Permanente</a></li>
        <li><a href="/Ahorros/Ahorros/ConfiguracionFACDAT" class="tabsnota"><i class="fa fa-calculator" aria-hidden="true"></i> Fichas Ahorro CDAT</a></li>
        <li><a href="/Ahorros/Ahorros/ConfiguracionFAC" class="tabsnota"><i class="fa fa-calculator" aria-hidden="true"></i> Fichas Ahorro Contractual</a></li>
        <li><a href="/FormularioApertura/FormularioApertura/Index" class="tabsnota"><i class="fa fa-file-text" aria-hidden="true"></i> Formulario de Apertura</a></li>
    </ul>
    <div class="tab-content contenedortabs">
        <div id="menu1" class="tab-pane fade in active">
            <div class="col-md-12"><h3 style="border-bottom: 5px solid #2B7785 !important; width: 100%; color: #2B7785 !important; padding: 9px 20px 15px 0px !important;margin-bottom: 31px !important;">Fichas Ahorro Permanente</h3></div>
            <div class="col-md-12">
                <table id="tablaAfiliadosFAP" cellpadding="0" cellspacing="0" border="0" class="table table-striped table-bordered table-condensed">
                    <thead>
                        <tr>
                            <th>Cuenta</th>
                            <th>Identificacion</th>
                            <th>Nombres</th>
                            <th>Forma de Pago</th>
                            <th>Porcentaje</th>
                            <th>Valor</th>
                            <th>Valor Cuota</th>
                            <th>Total Ahorros</th>
                            <th>Fecha Afiliacion</th>
                            @*<th>Empresa</th>
                                <th>Agencia</th>*@
                            <th>Activa</th>
                            <th>Tasa</th>
                            <th>Plazo Meses</th>
                            <th>F. Vencimiento</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>

                <div id="detallesFichas" hidden>
                    <div class="panel panel-info">
                        <div class="panel-heading">
                            <div class="text-center"><strong>Detalles de los ahorros</strong></div>
                        </div>
                        <div class="panel-body">
                            <table id="tablaADetallesAhorros" cellpadding="0" cellspacing="0" border="0" class="table table-striped table-bordered table-condensed">
                                <thead>
                                    <tr>
                                        <th>Ficha</th>
                                        <th>Valor Pagado</th>
                                        <th>Fecha Pago</th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                                <tfoot>
                                    <tr>
                                        <th colspan="2" style="text-align:right">Total Ahorros:</th>
                                        <th id="total">$0</th>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    </div>
                </div>
            </div><!--CONTENIDO TAB-->
        </div><!--MENU-->
    </div><!--CONTENEDOR TABS-->
</div>




@* Modal Afiliacion *@

<div id="AfiliarAhorros" data-backdrop="false" data-keyboard="false" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="myModalLabel">Afiliacion</h4>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("CrearFAP", "Ahorros", FormMethod.Post, htmlAttributes: new { id = "formAfiliacion", autocomplete = "off" }))
                {

                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    var habilitado = "";

                    if (configuracionAportes != null)
                    {
                        var porcentajeAporte = configuracionAportes.porcentajeCuota == null ? configuracionAportes.porcentaje : configuracionAportes.porcentajeCuota;
                        var tipoCalculo = "";
                        switch (configuracionAportes.idTipoCuotaCalculo)
                        {
                            case 1:
                                tipoCalculo = "Salario Minimo Legal Vigente";
                                habilitado = "readonly";
                                break;
                            case 2:
                                tipoCalculo = "Salario Asociado";
                                habilitado = "readonly";
                                break;
                            case 3:
                                tipoCalculo = "Valor Fijo";
                                break;
                            case 4:
                                tipoCalculo = "Cuota Fija";
                                break;
                            case 5:
                                tipoCalculo = "Ingreso Manual";
                                break;
                        }
                        <div class="alert alert-warning" role="alert">
                            <i class="fa fa-exclamation-circle"></i> Si el usuario ya tiene una ficha de ahorro registrada, esta se inactivará automáticamente.
                        </div>
                        <div class="row">
                            <div class="panel panel-info">
                                <div class="panel-heading">
                                    <h4 class="panel-title">
                                        <a data-toggle="collapse" href="#informacion">Mas Informacion</a>
                                    </h4>
                                </div>
                                <div id="informacion" class="panel-collapse collapse">
                                    <table class="table table-condensed">
                                        <tr><th>Calcula Sobre:</th><td></td></tr>
                                        <tr><th>Porcentaje Base:</th><td id="porcentajeManual"></td></tr>
                                        <tr><th>Valor Calculado:</th><td id="valorCalculado"></td></tr>
                                        <tr><th>Porcentaje Para Aporte:</th><td id="porcentajeAporteManual"></td></tr>
                                        <tr><th>Cuota para Ahorros:</th><td id="cuotaParaAporte"></td></tr>
                                    </table>
                                </div>
                            </div>
                        </div>
                    }

                    <div class="row">

                        <div class="form-group col-md-12">
                            @Html.LabelFor(model => model.idPersona, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group col-md-12">

                                @*@Html.EditorFor(model => model.idPersona, new { htmlAttributes = new { @class = "form-control", type = "text", placeholder = "Identificacion" } })*@
                                @*@Html.DropDownList("tercerosNoAfiliados", null, new { @class = "chosen-select-single form-control", @id = "tercerosNoAfiliados" })*@
                                @*@Html.DropDownList("tercerosNoAfiliados", null, htmlAttributes: new { @class = "chosen-select-single form-control", @id = ViewBag.tercerosNoAfiliados })*@
                                <div class="editor-field widget-container-col ui-sortable" style="width:800px;">

                                    <select class="chosen-select-single" id="idPersona" name="idPersona" data-placeholder="Seleccione el afiliado">
                                        <option value=""></option>
                                        @foreach (var item in ViewBag.tercerosNoAfiliados)
                                        {
                                            <option value="@item.Value">@item.Text</option>
                                        }
                                    </select>

                                </div>

                            </div>
                            @Html.ValidationMessageFor(model => model.idPersona, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="row">
                        <div class="form-group col-md-6">
                            <input id="salarioAsociado" value="" readonly hidden />
                            <label>Empresa:</label>
                            <input id="empresa" type="text" class="form-control" , placeholder="Empresa" readonly />
                        </div>
                        <div class="form-group col-md-6">
                            <label>Agencia:</label>
                            <input id="agencia" type="text" class="form-control" , placeholder="Agencia" readonly />
                        </div>
                    </div>

                    <div class="row">
                        <div class="form-group col-md-6">
                            <label>Forma de Pago:</label>
                            <select id="tipoPago" name="tipoPago" class="form-control">
                                <option value="Caja">Caja</option>
                                <option value="Nomina">Nomina</option>
                            </select>
                        </div>
                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.valorCuota)
                            @*<input id="valorCuota" type="text" name="valorCuota" class="form-control" placeholder="Valor cuota" @habilitado />*@
                            <div class="input-group col-lg-12">
                                <label class="input-group-addon">$</label>
                                <input type="text" id="VCuota" name="VCuota" required class="form-control" value="">
                            </div>
                            @Html.TextBoxFor(model => Model.valorCuota, new { @id = "valorCuota", placeholder = "Valor Cuota", @name = "Valor Cuota", @class = "form-control", @style = "display:none;" })
                            @Html.ValidationMessageFor(model => model.valorCuota, "", new { @class = "text-danger" })
                        </div>
                        @*<div class="form-group col-md-6">
                    @Html.LabelFor(model => model.porcentaje)
                    <input type="number" id="porcentaje" name="porcentaje" class="form-control" placeholder="Porcentaje" readonly />
                    <span id="porcentajePermitido"></span>
                    @Html.ValidationMessageFor(model => model.porcentaje, "", new { @class = "text-danger" })
                </div>*@
                    </div>

                    <div class="row">

                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.activo)
                            <select id="activo" name="activo" class="form-control">
                                <option value="true">Si</option>
                                <option value="false">No</option>
                            </select>
                            @Html.ValidationMessageFor(model => model.activo, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.Tasa_interes)
                            @*<input id="Tasa_interes" type="text" name="Tasa_interes" class="form-control" placeholder="Tasa" />*@
                            @Html.TextBoxFor(model => Model.Tasa_interes, new { @id = "Tasa_interes", placeholder = "Tasa de Interés", @name = "Tasa_interes", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Tasa_interes, "", new { @class = "text-danger" })

                        </div>
                    </div>
                    <div class="row">

                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.Plazo_meses)
                            @*<input id="Plazo_meses" type="text" name="Plazo_meses" class="form-control" placeholder="Plazo en meses" />*@
                            @Html.TextBoxFor(model => Model.Plazo_meses, new { @id = "Plazo_meses", placeholder = "Plazo en meses", @name = "Plazo_meses", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Plazo_meses, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.Fecha_Vencimiento)
                            <input id="Fecha_Vencimiento" type="text" name="Fecha_Vencimiento" class="form-control" placeholder="Fecha de Vencimiento" readonly="readonly" />
                            @Html.ValidationMessageFor(model => model.Fecha_Vencimiento, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="row">
                        <div class="modal-footer">
                            <button id="cancelarAfiliacion" type="button" class="btn btn-default" data-dismiss="modal">Cancelar</button>
                            <button id="guardarAfiliacion" type="button" class="btn btn-primary">Guardar</button>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<div id="EditarAfiliarAhorros" data-backdrop="false" data-keyboard="false" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="myModalLabel">Afiliacion</h4>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("EditarFichaAporte", "Aportes", FormMethod.Post, htmlAttributes: new { id = "EditformAfiliacion", autocomplete = "off" }))
                {

                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    if (configuracionAportes != null)
                    {
                        var porcentajeAporte = configuracionAportes.porcentajeCuota == null ? configuracionAportes.porcentaje : configuracionAportes.porcentajeCuota;
                        var tipoCalculo = "";
                        switch (configuracionAportes.idTipoCuotaCalculo)
                        {
                            case 1:
                                tipoCalculo = "Salario Minimo Legal Vigente";
                                break;
                            case 2:
                                tipoCalculo = "Salario Asociado";
                                break;
                            case 3:
                                tipoCalculo = "Valor Fijo";
                                break;
                            case 4:
                                tipoCalculo = "Cuota Fija";
                                break;
                            case 5:
                                tipoCalculo = "Ingreso Manual";
                                break;
                        }
                        <div class="row">
                            <div class="panel panel-info">
                                <div class="panel-heading">
                                    <h4 class="panel-title">
                                        <a data-toggle="collapse" href="#informacion">Mas Informacion</a>
                                    </h4>
                                </div>
                                <div id="informacion" class="panel-collapse collapse">
                                    <table class="table table-condensed">
                                        <tr><th>Calcula Sobre:</th><td>@tipoCalculo</td></tr>
                                        <tr><th>Porcentaje Base:</th><td id="porcentajeManual">@configuracionAportes.porcentaje%</td></tr>
                                        <tr><th>Valor Calculado:</th><td id="valorCalculado">@configuracionAportes.valor</td></tr>
                                        <tr><th>Porcentaje Para Aporte:</th><td id="porcentajeAporteManual">@porcentajeAporte%</td></tr>
                                        <tr><th>Cuota para Aporte:</th><td id="cuotaParaAporte">@configuracionAportes.valorCuota</td></tr>
                                    </table>
                                </div>
                            </div>
                        </div>
                    }

                    <div class="row">
                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.idPersona, htmlAttributes: new { @class = "control-label" })
                            @Html.TextBoxFor(model => model.idPersona, new { @id = "EditPersonaId", @class = "form-control", @readonly = "true" })

                        </div>
                        <div class="form-group col-md-6">
                            <label>Nombre:</label>
                            <span class="input-group-addon" id="nomPersona"></span>
                            @*@Html.ValidationMessageFor(model => model.idPersona, "", new { @class = "text-danger" })*@
                        </div>
                    </div>

                    <div class="row">
                        <div class="form-group col-md-6">
                            <input id="salarioAsociado" value="" readonly hidden />
                            <label>Empresa:</label>
                            <input id="empresa" type="text" class="form-control" , placeholder="Empresa" readonly />
                        </div>
                        <div class="form-group col-md-6">
                            <label>Agencia:</label>
                            <input id="agencia" type="text" class="form-control" , placeholder="Agencia" readonly />
                        </div>
                    </div>

                    <div class="row">
                        <div class="form-group col-md-6">
                            <label>Forma de Pago:</label>
                            <select id="tipoPago" name="tipoPago" class="form-control">
                                <option value="Caja">Caja</option>
                                <option value="Nomina">Nomina</option>
                            </select>
                        </div>
                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.valorCuota)
                            <div class="input-group col-lg-12">
                                <label class="input-group-addon">$</label>
                                <input type="text" id="EditV_cuota" name="EditV_cuota" required class="form-control" value="0">
                            </div>
                            @Html.TextBoxFor(model => Model.valorCuota, new { @id = "EditvalorCuota", placeholder = "Valor Cuota", @name = "Valor Cuota", @class = "form-control", @style = "display: none;" })
                            @Html.ValidationMessageFor(model => model.valorCuota, "", new { @class = "text-danger" })
                        </div>
                        @*<div class="form-group col-md-6">
                                @Html.LabelFor(model => model.porcentaje)
                                <input type="number" id="porcentaje" name="porcentaje" class="form-control" placeholder="Porcentaje" readonly />
                                <span id="porcentajePermitido"></span>
                                @Html.ValidationMessageFor(model => model.porcentaje, "", new { @class = "text-danger" })
                            </div>*@
                    </div>

                    <div class="row">

                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.activo)
                            <select id="activo" name="activo" class="form-control">
                                <option value="true">Si</option>
                                <option value="false">No</option>
                            </select>
                            @Html.ValidationMessageFor(model => model.activo, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.Tasa_interes)
                            @*<input id="Tasa_interes" type="text" name="Tasa_interes" class="form-control" placeholder="Tasa" />*@
                            @Html.TextBoxFor(model => Model.Tasa_interes, new { @id = "EditTasa_interes", placeholder = "Tasa de Interés", @name = "EditTasa_interes", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Tasa_interes, "", new { @class = "text-danger" })

                        </div>
                    </div>
                    <div class="row">

                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.Plazo_meses)
                            @*<input id="Plazo_meses" type="text" name="Plazo_meses" class="form-control" placeholder="Plazo en meses" />*@
                            @Html.TextBoxFor(model => Model.Plazo_meses, new { @id = "EditPlazo_meses", placeholder = "Plazo en meses", @name = "EditPlazo_meses", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Plazo_meses, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.Fecha_Vencimiento)
                            <input id="Fecha_Vencimiento" type="text" name="Fecha_Vencimiento" class="fecha form-control" placeholder="Fecha de Vencimiento" readonly="readonly" />
                            @*@Html.TextBoxFor(model => Model.Fecha_Vencimiento, new { @id = "EditFecha_Vencimiento", placeholder = "Plazo en meses", @name = "EditFecha_Vencimiento", @class = "form-control", @readonly = true })*@
                            @*@Html.ValidationMessageFor(model => model.Fecha_Vencimiento, "", new { @class = "text-danger" })*@
                        </div>
                    </div>

                    <div class="row">
                        <div class="modal-footer">
                            <button id="cancelarAfiliacion" type="button" class="btn btn-default" data-dismiss="modal">Cancelar</button>
                            <button id="EditguardarAfiliacion" type="submit" class="btn btn-primary">Guardar</button>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/jquery-ui.min.js"></script>
    <script src="~/Scripts/datatables.js"></script>
    <script src="~/Scripts/DinamismoCliente/formatMilesDec.js"></script>
    <script src="~/Scripts/DinamismoCliente/Dinamismos.js"></script>
    @if (ViewBag.configuracionGeneral == null)
    {
        <script>
            Swal.fire({
                title: 'Sin configuración', text: "No se ha creado una configuración General", icon: 'warning', showCancelButton: false, confirmButtonColor: '#3085d6', cancelButtonColor: '#d33', confirmButtonText: 'Aceptar'
            }).then((result) => {
                if (result.isConfirmed) {
                    location.reload(true);
                }
            });
        </script>
    }
    @if (configuracionAportes == null)
    {
        <script>
            Swal.fire({
                title: 'Sin configuración', text: "No se ha creado una configuracion para aportes", icon: 'warning', showCancelButton: false, confirmButtonColor: '#3085d6', cancelButtonColor: '#d33', confirmButtonText: 'Aceptar'
            }).then((result) => {
                if (result.isConfirmed) {
                    location.href = "/Aportes/Aportes/Configuracion";
                }
            });
        </script>
    }
    @if (configuracionAhorros == null)
    {
        <script>
            Swal.fire({
                title: 'Sin configuración', text: "No se ha creado una configuracion para ahorros permanentes", icon: 'warning', showCancelButton: false, confirmButtonColor: '#3085d6', cancelButtonColor: '#d33', confirmButtonText: 'Aceptar'
            }).then((result) => {
                if (result.isConfirmed) {
                    location.href = "/Ahorros/Ahorros/ConfiguracionFAP";
                }
            });
        </script>
    }
    else
    {
        if (configuracionAhorros.Respuesta != null)
        {
            var titulo = configuracionAhorros.Respuesta.Correcto ? "Correcto" : "Error";
            var texto = configuracionAhorros.Respuesta.Mensaje;
            var tipo = configuracionAhorros.Respuesta.Correcto ? "success" : "error";
            <script>
                Swal.fire({
                    title: '@titulo', text: "@texto", icon: '@tipo', showCancelButton: false, confirmButtonColor: '#3085d6', cancelButtonColor: '#d33', confirmButtonText: 'Aceptar'
                }).then((result) => {
                    if (result.isConfirmed) {
                        
                    }
                });
            </script>
        }

        <script>
            

            var tipoCalculo = "@configuracionAportes.idTipoCuotaCalculo";

            //calculo cuota
            @*$("#valorCuota").on("keyup", function () {
                var cuota = parseFloat($(this).unmask()) * parseFloat("@configuracionAhorros.porcentajeParaAhorros") / 100;
                $("#porcentajeManual").text("@configuracionAhorros.porcentajeParaAhorros%");
                $("#valorCalculado").text(Miles($(this).val()));
                $("#porcentajeAporteManual").text("@configuracionAhorros.porcentajeParaAhorros%");
                $("#cuotaParaAporte").text(Miles(cuota));
            });*@

            //calculo cuota

            if (tipoCalculo == "1") {
                var valorBase = "@configuracionAportes.valor";
                var cuota = parseFloat(valorBase) * parseFloat("@configuracionAhorros.porcentajeParaAhorros") / 100;
                $("#porcentajeManual").text("@configuracionAportes.porcentaje%");
                $("#valorCalculado").text(formatearNumero("@configuracionAportes.valor"));
                $("#porcentajeAporteManual").text("@configuracionAhorros.porcentajeParaAhorros%");
                $("#cuotaParaAporte").text(formatearNumero(""+cuota));
            } else {
                $("#porcentajeManual").text("@configuracionAhorros.porcentajeParaAhorros%");
                $("#porcentajeAporteManual").text("@configuracionAhorros.porcentajeParaAhorros%");
            }

            $("#valorCuota").on("keyup", function () {
                var valorBase = quitarFormato($("#valorCuota").val());
                var cuota = parseFloat(valorBase) * parseFloat("@configuracionAhorros.porcentajeParaAhorros") / 100;
                $("#valorCalculado").text(formatearNumero(""+valorBase));
                $("#cuotaParaAporte").text(formatearNumero(""+cuota));
            });

            function seleccionado()
            {

                if (tipoCalculo == "2") {
                    //var cuota = parseFloat($("#valor").unmask());
                    var valorBase = $("#salarioAsociado").val();
                    var valorCalculado = parseFloat(valorBase) * parseFloat("@configuracionAportes.porcentaje") / 100;
                    var cuota = parseFloat(valorCalculado) * parseFloat("@configuracionAhorros.porcentajeParaAhorros") / 100;
                    $("#porcentajeManual").text("@configuracionAportes.porcentaje%");
                    $("#valorCalculado").text(formatearNumero(valorCalculado));
                    $("#porcentajeAporteManual").text("@configuracionAhorros.porcentajeParaAhorros%");
                    $("#cuotaParaAporte").text(formatearNumero(cuota));
                }
            }
            function desseleccionado()
            {
                if (tipoCalculo == "2") {
                    $("#porcentajeManual").text("");
                    $("#valorCalculado").text("");
                    $("#porcentajeAporteManual").text("");
                    $("#cuotaParaAporte").text("");
                }
            }
        </script>
    }

    <script>
        $(document).ready(function () {
          
            $(".chosen-select-single").chosen();
            //$(".chosen-select").chosen({ allow_single_deselect: true });
            //$(".chosen-select-multiple").chosen();    //DESPUES DEL FINAL DEL DOCUMENTO AL PRINCIPIO DE LOS SCRIPTS

            AhorrosPermanentes();

        });

        $("#Plazo_meses").blur(function () {
            var e = new Date()
            var meses = $("#Plazo_meses").val();
            e.setMonth(e.getMonth() + parseInt(meses));
            $("#Fecha_Vencimiento").val(e.getFullYear() + "-" + (e.getMonth() + 1) + "-" + e.getDate());
        })
        $("#EditPlazo_meses").blur(function () {
            var e = new Date()
            var meses = $("#EditPlazo_meses").val();
            
            e.setMonth(e.getMonth() + parseInt(meses));
            $(".fecha").val(e.getFullYear() + "-" + (e.getMonth() + 1) + "-" + e.getDate());
        })

        $(function () {
            $('#guardarAfiliacion').click(function () {
                $('#guardarAfiliacion').attr("disabled", true);
                var ValorCuota = $("#valorCuota").val();
                var tasa = $("#Tasa_interes").val();
                var plazo = $("#Plazo_meses").val();


                if (ValorCuota == "") {
                    $('#guardarAfiliacion').attr("disabled", false);
                    Swal.fire({ title: "Ops!!", text: "El valor de la cuota no puede estar vacio", confirmButtonText: "Ok" });
                    return false;
                }
                if (tasa == "") {
                    $('#guardarAfiliacion').attr("disabled", false);
                    Swal.fire({ title: "Ops!!", text: "El valor de la tasa no puede estar vacio", confirmButtonText: "Ok" });
                    return false;
                }
                if (plazo == "") {
                    $('#guardarAfiliacion').attr("disabled", false);
                    Swal.fire({ title: "Ops!!", text: "El valor del plazo no puede estar vacio", confirmButtonText: "Ok" });
                    return false;
                }

                var IdPersona = $("#IdPersona").val();
                if (IdPersona != "") {
                    VerificarAporte();
                }


            })

            $('#EditguardarAfiliacion').click(function () {
                $('#EditguardarAfiliacion').attr("disabled", true);
                var EditCuota = $("EditV_cuota").val();
                var ValorCuota = $("#EditvalorCuota").val();
                var tasa = $("#EditTasa_interes").val();
                var plazo = $("#EditPlazo_meses").val();
                
                if (EditCuota == 0) {
                    $('#EditguardarAfiliacion').attr("disabled", false);
                    Swal.fire({ title: "Ops!!", text: "El valor de la cuota no puede estar vacio", confirmButtonText: "Ok" });
                    return false;
                }
                if (ValorCuota == "") {
                    $('#EditguardarAfiliacion').attr("disabled", false);
                    Swal.fire({ title: "Ops!!", text: "El valor de la cuota no puede estar vacio", confirmButtonText: "Ok" });
                    return false;
                }
                if (tasa == "") {
                    $('#EditguardarAfiliacion').attr("disabled", false);
                    Swal.fire({ title: "Ops!!", text: "El valor de la tasa no puede estar vacio", confirmButtonText: "Ok" });
                    return false;
                }
                if (plazo == "") {
                    $('#EditguardarAfiliacion').attr("disabled", false);
                    Swal.fire({ title: "Ops!!", text: "El valor del plazo no puede estar vacio", confirmButtonText: "Ok" });
                    return false;
                }

            })
        })
    </script>


    <script>

        function VerificarAporte() {
            var IdPersona = $("#idPersona").val();
            $.ajax({
                url: '/Aportes/Aportes/VerificaAporte',
                datatype: "Json",
                data: { IdPersona: IdPersona },
                type: 'post',
            }).done(function (data) {
                if (data.respuesta) {
                    $("#formAfiliacion").submit();
                }
                else {
                    $('#guardarAfiliacion').attr("disabled", false);
                    Swal.fire({ title: "Informacion:", text: "El asociado no cuenta con una ficha de aporte activa.", type: 'info', confirmButtonText: 'Aceptar' });
                }

            });

            return true;
        };

        $("#EditV_cuota").keyup(function () {
            $('#EditguardarAfiliacion').attr("disabled", false);
            var entrada = $("#EditV_cuota").val().split('.').join('');
            entrada = entrada.split('').reverse();
            var salida = [];
            var aux = '';

            var paginador = Math.ceil(entrada.length / 3);

            for (let i = 0; i < paginador; i++) {
                for (let j = 0; j < 3; j++) {

                    if (entrada[j + (i * 3)] != undefined) {
                        aux += entrada[j + (i * 3)];
                    }
                }
                salida.push(aux);
                aux = '';
            }
            var string = salida.join('.').split("").reverse().join('');
            var double = parseFloat(string);
            $("#EditV_cuota").val(string);


        })

        $(document).ready(function () {

            $('#EditV_cuota').keyup(function () {
                var value = $(this).val();

                var entrada = $("#EditV_cuota").val();
                var punto = entrada.split('.').join("");
                var valor = parseFloat(punto);
                $('#EditvalorCuota').val(valor);
            });
        });

        $("#VCuota").keyup(function () {
            $('#guardarAfiliacion').attr("disabled", false);
            var entrada = $("#VCuota").val().split('.').join('');
            entrada = entrada.split('').reverse();
            var salida = [];
            var aux = '';

            var paginador = Math.ceil(entrada.length / 3);

            for (let i = 0; i < paginador; i++) {
                for (let j = 0; j < 3; j++) {

                    if (entrada[j + (i * 3)] != undefined) {
                        aux += entrada[j + (i * 3)];
                    }
                }
                salida.push(aux);
                aux = '';
            }
            var string = salida.join('.').split("").reverse().join('');
            var double = parseFloat(string);
            $("#VCuota").val(string);


        })

        $(document).ready(function () {

            $('#VCuota').keyup(function () {
                var value = $(this).val();

                var entrada = $("#VCuota").val();
                var punto = entrada.split('.').join("");
                var valor = parseFloat(punto);
                $('#valorCuota').val(valor);
            });
        });
        
    </script>
}


