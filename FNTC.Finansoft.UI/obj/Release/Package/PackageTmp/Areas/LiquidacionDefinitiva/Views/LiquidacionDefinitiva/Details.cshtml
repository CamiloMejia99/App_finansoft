@model FNTC.Finansoft.Accounting.DTO.LiquidacionesDefinitivas.LiquidacionDefinitivaAso
<script src="~/Scripts/jquery2-1-4.min.js"></script>
<!-- #region Bootstrap -->
<link href="~/Content/bootstrap.min.css" rel="stylesheet" />
<script src="~/Scripts/bootstrap.min.js"></script>
<!-- #endregion -->
@{
    Layout = null;
}

<style>
    .letra {
        font-size: 17px;
    }

    .letra2 {
        font-size: 20px;
    }
</style>

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div style="border:2px solid grey; border-radius:22px; background-color:white; width:1200px;">

        <table width="100%" height="124.8" border="0">
            <tbody>
                <tr>
                    <td width="100%" align="center">
                        <img src="~/Areas/FormularioRetiro/Imagenes/LOGOCOOMISOL.png" width="50%" height="180" alt="" />
                    </td>
                </tr>
                <tr>
                    <td width="100%" align="center"><br><b>COOPERATIVA MULTIACTIVA DE INTEGRACIÓN SOCIAL <br />NIT. 901022853-9 </b></td>
                </tr>
                <tr>
                    <td width="100%" align="center"><br><b>LIQUIDACION DEFINITIVA DE ASOCIADO<br /></b></td>
                </tr>
            </tbody>
        </table>

        <table style="margin-left: 15%" width="100%">
            <tbody>
                <tr><td><br /><br /><br /></td></tr>
                <tr>
                    <td width="100%">
                        <label style="font-size: 20px">Fecha: </label>
                        @Html.EditorFor(model => model.fechaLiquidacion, new { htmlAttributes = new { @style = "border: 0; font-size: 20px", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.fechaLiquidacion, "", new { @class = "text-danger" })
                        <br />
                    </td>
                </tr>
                <tr>
                    <td width="100%">
                        <label style="font-size: 20px">Nombre: </label>
                        <label style="font-size: 20px" id="nombre"></label>
                        <br />
                    </td>
                </tr>
                <tr>
                    <td width="100%">
                        <label style="font-size: 20px">Cedula: </label>
                        @Html.EditorFor(model => model.NIT, new { htmlAttributes = new { @style = "border: 0; font-size: 20px", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.NIT, "", new { @class = "text-danger" })
                        <br />
                    </td>
                </tr>
                <tr>
                    <td width="100%">
                        <label style="font-size: 20px">Agencia: </label>
                        @Html.EditorFor(model => model.agencia, new { htmlAttributes = new { @style = "border: 0; font-size: 20px", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.agencia, "", new { @class = "text-danger" })
                        <br />
                    </td>
                </tr>

                <tr><td><br /></td></tr>
                <tr>
                    <td width="100%">
                        <label style="font-size: 20px"><b>Ahorros</b></label>
                        <br /><br /><br />
                    </td>
                </tr>
                <tr>
                    <td width="100%">
                        <label style="font-size: 20px">Aportes Sociales: </label>
                        @Html.EditorFor(model => model.aportesSociales, new { htmlAttributes = new { @style = "border: 0; font-size: 20px", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.aportesSociales, "", new { @class = "text-danger" })
                        <br />
                    </td>
                </tr>
                <tr>
                    <td width="100%">
                        <label style="font-size: 20px">Total Ahorros: </label>
                        @Html.EditorFor(model => model.totalAhorros, new { htmlAttributes = new { @style = "border: 0; font-size: 20px", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.totalAhorros, "", new { @class = "text-danger" })
                        <br /><br /><br />
                    </td>
                </tr>
                <tr>
                    <td width="100%">
                        <label style="font-size: 20px"><b>Creditos</b></label>
                        <br /><br /><br />
                    </td>
                </tr>
                <tr>
                    <td width="100%">
                        <label style="font-size: 20px">Credito De Consumo: </label>
                        @Html.EditorFor(model => model.creditoConsumo, new { htmlAttributes = new { @style = "border: 0; font-size: 20px", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.creditoConsumo, "", new { @class = "text-danger" })
                        <br />
                    </td>
                </tr>
                <tr>
                    <td width="100%">
                        <label style="font-size: 20px">Total Creditos: </label>
                        @Html.EditorFor(model => model.totalCreditos, new { htmlAttributes = new { @style = "border: 0; font-size: 20px", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.totalCreditos, "", new { @class = "text-danger" })
                        <br />
                    </td>
                </tr>
                <tr><td><br /></td></tr>
                <tr>
                    <td width="100%">
                        <label style="font-size: 20px"><b>Saldo A Favor: </b></label>
                        @Html.EditorFor(model => model.saldoAFavor, new { htmlAttributes = new { @style = "border: 0; font-size: 20px", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.saldoAFavor, "", new { @class = "text-danger" })
                        <br />
                    </td>
                </tr>
                <tr><td><br /><br /><br /><br /></td></tr>

                <tr>
                    <td>
                        <div style="margin-left:550px; border:2px solid grey; border-radius:22px; width:140px; height:180px">
                            <table>
                                <tr>
                                    <td width="50%" align="center" style="font-size: 10px;">
                                        <br>
                                        <br>
                                        <br>
                                        <br>
                                        <br><br>
                                        <br>
                                        <br><br>
                                        <br>
                                        <br>
                                        <br>
                                        <br>


                                        Huella dactilar
                                        <br>
                                        <br>
                                    </td>
                                </tr>

                            </table>
                        </div>
                        <div class="col-md-5">
                            <label><b>Realizado Por</b></label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<label><b>Recibí de Conformidad</b></label>
                        </div>
                    </td>
                </tr>
                <tr><td><br /><br /><br /></td></tr>
                <tr>
                    <td width="100%">
                        <label style="font-size: 20px">Asesor: </label>
                        @Html.EditorFor(model => model.asesor, new { htmlAttributes = new { @style = "border: 0; font-size: 20px", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.asesor, "", new { @class = "text-danger" })
                        <br />
                    </td>
                </tr>
                <tr>
                    <td width="100%">
                        <label style="font-size: 20px">COOPERATIVA MULTIACTIVA DE APORTE Y CREDITO COOMISOL</label>
                    </td>
                </tr>
                <tr><td><br /><br /><br /></td></tr>
                <tr>
                    <td style="font-size: 20px">
                        <p>PARAGRAFO: El asociado recibe el 100% de sus aportes, por lo cual la COOPERATIVA MULTIACTIVA </p>
                        <p>DE APORTE Y CREDITO COOMISOL, queda a Paz y Salvo por todo concepto.</p>
                    </td>
                </tr>
                <tr><td><br /><br /><br /></td></tr>
            </tbody>
        </table>
    </div>
</div>

<script>
    $(document).ready(function () {
        $('#aportesSociales').val(formatNumberMiles.new($('#aportesSociales').val()));
        $('#totalAhorros').val(formatNumberMiles.new($('#totalAhorros').val()));
        $('#saldoAFavor').val(formatNumberMiles.new($('#saldoAFavor').val()));
        $.ajax({
                url: '@Url.Action("GetNombre","LiquidacionDefinitiva")',
                method: 'GET',
                datatype: "Json",
                data: { NIT: $('#NIT').val() },//solo para enviar datos
            }).done(function (data) {
                $('#nombre').text(data);
            });
    });
</script>

<script>
    //FORMATEAR UN NUMERO
    var formatNumberMiles = {
        separador: ".", // separador para los miles
        sepDecimal: ',', // separador para los decimales
        formatear: function (num) {
            num += '';
            var splitStr = num.split('.');
            var splitLeft = splitStr[0];
            var splitRight = splitStr.length > 1 ? this.sepDecimal + splitStr[1] : '';
            var regx = /(\d+)(\d{3})/;
            while (regx.test(splitLeft)) {
                splitLeft = splitLeft.replace(regx, '$1' + this.separador + '$2');
            }
            return this.simbol + splitLeft + splitRight;
        },
        new: function (num, simbol) {
            this.simbol = simbol || '';
            return this.formatear(num);
        }
    }
    //FIN FORMATEAR UN NUMERO
    /*
    * FUNCIONALIDAD DE LA 'FUNCION'
    formatNumber.new(123456779.18, "$") // retorna "$123.456.779,18"
    formatNumber.new(123456779.18) // retorna "123.456.779,18"
    formatNumber.new(123456779) // retorna "$123.456.779"
    */
</script>