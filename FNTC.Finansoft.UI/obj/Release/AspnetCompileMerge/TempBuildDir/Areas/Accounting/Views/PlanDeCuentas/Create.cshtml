@model FNTC.Finansoft.Accounting.DTO.Contabilidad.CuentaMayor

@{

    var action = (string)ViewBag.Boton;
    ////Layout = "~/Views/Shared/_Layout.cshtml";


    //Layout = "~/Views/Shared/_Layout.cshtml";

    // Layout = "~/Views/Shared/_Modal.cshtml";
    //var action = (string)ViewBag.action;
    var boton = (string)ViewBag.Boton;

    //var tipos = new List<SelectListItem>();
    //tipos.Add(new SelectListItem() { Text = "tipo", Value = "1" });

    var tipos = ViewBag.tci; 
    var nat = @ViewBag.Nat;
    var monica = (string)@ViewBag.Mensaje;
    //   if (Model.EsCuentaImpuesto) ;
    //  Model = (.Contabilidad.CuentaImpuestos)Model;


}
<!-- Latest compiled and minified CSS -->
<!-- Latest compiled and minified JavaScript -->
<link href="~/Content/css/chosen.css" rel="stylesheet" />
<script src="~/Scripts/sweetalert.min.js"></script>
<link href="~/Content/css/sweetalert.css" rel="stylesheet" />

<div class="col-md-12">
    @using (Html.BeginForm("Create", "PlanDeCuentas", FormMethod.Post, new { novalidate = "novalidate", id = "theForm" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <div class="titulo-caption" style="margin-top:0px!important">Nueva cuenta</div>
            <div class="rutavolver">/Dashboard/Default#&catalogos</div>
            <div class="panel panel-default panelnuevo">
                <div class="panel-heading modalheadergeneral" style="width: 100.1%; margin-left: 0%;">
                    <h4 class="panel-title ">@action cuenta</h4>
                </div><br />
                @Html.ValidationSummary(false, "", new { @class = "text-danger" })
                <div class="panel-body" style="padding: 5px;">
                    <form>

                        <div class="col-sm-6">
                            <div class="form-group">
                                @*@Html.LabelFor(model => model.CODIGO, htmlAttributes: new { @class = "col-md-12" })*@
                                <div class="col-md-12">
                                    @if (action.Equals("Editar"))
                                    {
                                        @Html.TextBoxFor(model => model.CODIGO,
                                        new { @class = "form-control auto", @required = "required", @readonly = "" });
                                    }
                                    else
                                    {
                                        @Html.TextBoxFor(model => model.CODIGO,
                                        new { @class = "form-control auto", @required = "required", @maxlength = 9, minlength = 9, placeHolder = "CODIGO CUENTA Ej. 110505001" });
                                    }
                                    @Html.ValidationMessageFor(model => model.CODIGO, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="col-sm-6">
                            <div class="form-group">
                                <div class="col-md-12">
                                    @Html.DropDownListFor(model => model.NATURALEZA, new SelectList(nat, "Value", "Text"), "NATURALEZA...", new { @class = "form-control", @required = "required" })
                                    @Html.ValidationMessageFor(model => model.NATURALEZA, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="col-sm-12">
                            <div class="form-group">
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.NOMBRE,
                                    new { htmlAttributes = new { @class = "form-control", @required = "required", placeHolder = "NOMBRE CUENTA" } })
                                    @Html.ValidationMessageFor(model => model.NOMBRE, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="col-md-12" style="text-align: center; font-size: 16px;">
                            <label class="checkbox-inline">
                                @Html.CheckBoxFor(model => model.REQTERCERO)
                                @Html.ValidationMessageFor(model => model.REQTERCERO, "", new { @class = "text-danger" }) Req.tercero
                            </label>
                            <label class="checkbox-inline">
                                @Html.CheckBoxFor(model => model.REQCCOSTO)
                                @Html.ValidationMessageFor(model => model.REQCCOSTO, "", new { @class = "text-danger" }) Request. costo
                            </label>
                            <label class="checkbox-inline">
                                @Html.CheckBoxFor(model => model.CORRIENTE)
                                @Html.ValidationMessageFor(model => model.CORRIENTE, "", new { @class = "text-danger" }) Corriente
                            </label>
                            <label class="checkbox-inline">
                                @Html.CheckBoxFor(model => model.VALIDASALDO)
                                @Html.ValidationMessageFor(model => model.VALIDASALDO, "", new { @class = "text-danger" }) Val.saldo
                            </label>
                            <label class="checkbox-inline">
                                @Html.CheckBoxFor(model => model.INACTIVO)
                                @Html.ValidationMessageFor(model => model.INACTIVO, "", new { @class = "text-danger" }) Inactivo
                            </label>
                            @if (!action.Equals("Editar"))
                            {
                                <label class="checkbox-inline">
                                    @Html.CheckBoxFor(model => model.EsCuentaImpuesto, htmlAttributes: new { @id = "impuesto" })
                                    @Html.ValidationMessageFor(model => model.EsCuentaImpuesto, "", new { @class = "text-danger" }) Cuenta IMP
                                </label>
                            }
                            else
                            {
                                <label class="checkbox-inline">
                                    @Html.CheckBoxFor(model => model.EsCuentaImpuesto, htmlAttributes: new { @id = "impuesto" })
                                    @Html.ValidationMessageFor(model => model.EsCuentaImpuesto, "", new { @class = "text-danger"}) Cuenta IMP
                                </label>
                            }

                            @if (!action.Equals("Editar"))
                            {
                                <label class="checkbox-inline">
                                    @Html.CheckBoxFor(model => model.EsCuentaNIIF, htmlAttributes: new { @id = "CcuentaNIIF" })
                                    @Html.ValidationMessageFor(model => model.EsCuentaNIIF, "", new { @class = "text-danger" }) Cuenta NIIF
                                </label>
                            }
                            else
                            {
                                <label class="checkbox-inline">
                                    @Html.CheckBoxFor(model => model.EsCuentaNIIF, htmlAttributes: new { @id = "CcuentaNIIF" })
                                    @Html.ValidationMessageFor(model => model.EsCuentaNIIF, "", new { @class = "text-danger" }) Cuenta NIIF
                                </label>
                            }
                        </div>
                        <div class="clearfix"></div><br />

                        <div class="cuentaNIIF" id="cuentaNIIF">
                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label class="col-sm-12">Cuenta a Homologar</label>
                                    <div class="col-sm-12">
                                        @Html.DropDownList("lCuentasNIIF", null, new { @class = "chosen-select-single", @id = "lCuentasNIIF",@name= "lCuentasNIIF" })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="clearfix"></div><br />

                        <div class="cuentaImpuestos" id="cuentaImpuestos" style="display:none">
                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label class="col-sm-12">Tipo</label>
                                    <div class="col-sm-12">
                                        @Html.DropDownList("Tipo", new SelectList(tipos, "Value", "Text"), "seleccione...", new { @class = "form-control", required = "required" })
                                    </div>
                                </div>
                            </div>

                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label class="col-sm-12">Detalle</label>
                                    <div class="col-sm-12">

                                        @if (Model is FNTC.Finansoft.Accounting.DTO.Contabilidad.CuentaImpuestos)
                                            {
                                                var d = (Model as FNTC.Finansoft.Accounting.DTO.Contabilidad.CuentaImpuestos).Detalle;
                                                @Html.TextBox("Detalle", d, new { @class = "form-control", required = true });
                                            }
                                        else
                                        {

                                            @Html.TextBox("Detalle", "", new { @class = "form-control", required = true });
                                        }
                                        @*<input type="text" name="Detalle" id="Detalle" class="form-control" required>*@
                                    </div>
                                </div>
                            </div><div class="clearfix"></div>
                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label class="col-sm-12">Base</label>
                                    <div class="col-sm-12">



                                        @if (Model is FNTC.Finansoft.Accounting.DTO.Contabilidad.CuentaImpuestos)
                                        {
                                            var b = (Model as FNTC.Finansoft.Accounting.DTO.Contabilidad.CuentaImpuestos).Base;
                                            @Html.TextBox("Base", b, new { step = "0,01", @class = "form-control", required = true })
                                        }
                                        else
                                        {
                                            @Html.TextBox("Base", "", new { step = "0,01", @class = "form-control", required = true })
                                        }
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label class="col-sm-12">Porcentaje%</label>
                                    <div class="col-sm-12">


                                        @*<input type="number" name="Porcentaje" step="0.01" id="porcentaje" class="form-control" required>*@

                                        @if (Model is FNTC.Finansoft.Accounting.DTO.Contabilidad.CuentaImpuestos)
                                        {
                                            var p = (Model as FNTC.Finansoft.Accounting.DTO.Contabilidad.CuentaImpuestos).Porcentaje;
                                            @Html.TextBox("Porcentaje", p, new { @class = "form-control", placeholder = "ej. 16.00%" })
                                        }
                                        else
                                        {
                                            @Html.TextBox("Porcentaje", "", new { @class = "form-control", placeholder = "ej. 16.00%" })
                                        }
                                    </div>
                                </div>
                            </div><div class="clearfix"></div>
                        </div>


                        <div class="modal-footer">
                            <button type="submit" value="@boton" name="boton" class="btn btn-default botonguardar"><i class="fa fa-floppy-o" aria-hidden="true"></i> Guardar </button>
                            <button type="button" id="close" class="btn btn-default" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i> Cerrar</button>
                            <input type="hidden" name="action" value="@action" />
                            @*<button type="button" class="btn btn-primary">Save changes</button>*@
                        </div>

                        @*<div class="form-group">
            <div class="col-md-offset-8 col-md-3">
                <button type="submit" id="@ViewBag.Boton" name="submit" value="@ViewBag.Boton" class="btn btn-default botonguardar"><i class="fa fa-floppy-o" aria-hidden="true"></i> Guardar</button>
            </div>
        </div>*@


                    </form>
                </div>
            </div>
        </div>
    }
</div>
<div class="col-md-12" style=" margin-top: -49px;">
    <div class="form-horizontal">
        <div class="titulo-caption">Plan de cuentas</div>
        <div class="rutavolver">/Dashboard/Default/catalogos</div>
        <div class="panel panel-default panelcuentas">
            <div class="panel-heading modalheadercuentas" style="background-color:#509601">
                <h4 class="panel-title ">Plan de Cuentas</h4>
            </div><br />
            <div class="col-md-12" id="log"></div>

        </div>
    </div>
</div>

<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/chosen.jquery.min.js"></script>

<script type="text/javascript">
    $(document).ready(function () {
        $(".chosen-select-single").chosen();
        $(".chosen-select-multiple").chosen();
    });
</script>
<script>

    $(document).ready(function ()
    {
        $("#CuentasNoNIIF").chosen().change(function () {
            $.ajax({
                type: "POST",
                url: "@Url.Action("ValidacionCuenta", "PlanDeCuentas")",
                datatype: "Json",
                data: { Cuenta: $('#CuentasNoNIIF').val() },
                success: function (data) {
                    if (data != true) {
                        swal({
                            title: "Alerta",
                            type: "info",
                            text: "Esta Cuenta ya se Encuentra Homologada como "+data.NOMBRE,
                        })
                        $('#CuentasNoNIIF').val("").trigger('chosen:updated');
                    }
                }
            });
        });
    });

    $(document).ready(function () {

        /* SEPARADOR DE MILES POR KEY UP */
        $("#Base").on({
            "focus": function (event) {
                $(event.target).select();
            },
            "keyup": function (event) {
                $(event.target).val(function (index, value) {
                    return value.replace(/\D/g, "")
                        .replace(/([0-9])([0-9]{3})$/, '$1,$2')
                        .replace(/\B(?=(\d{3})+(?!\d)\.?)/g, ",");
                });
            }
        });
        /* FIN SEPARADOR DE MILES POR KEY UP */

    });

    $(".auto").keyup(function () {

        var t = $(this).val();
        //    alert(t);
        //aca traigo la cuenta con todas sus caracteristicas
        $.ajax({
            url: "../../../accounting/plandecuentas/GetCuentas"
            , type: "GET"
            , dataType: 'json'
            , data: { "term": t }
            , success: function (result) {

                $("#log").empty();
                var ul = $('<ul>').appendTo("#log");
                $(result).each(function (index, item) {
                    ul.append($(document.createElement('li')).text(item.CODIGO + "- " + item.NOMBRE))

                    //ul.append($(document.createElement('li')).text("Requiere Tercero : " + item.REQTERCERO))
                    //ul.append($(document.createElement('li')).text("Requiere Tercero : " + item.REQCCOSTO))
                    //ul.append($(document.createElement('li')).text("Es Cuenta Impuesto : " + item.EsCuentaImpuesto))
                    //ul.append($(document.createElement('li')).text("Naturaleza : " + item.NATURALEZA))
                });
            }
        })
    })


    $('#impuesto').change(function () {
        if (this.checked) {
            $('#cuentaImpuestos').show();
            $("#Detalle,#Base,#Porcentaje,#Tipo").attr("required", "true");

        }
        else {
            $("#Detalle,#Base,#Porcentaje,#Tipo").removeAttr("required");
            $('#cuentaImpuestos').hide();
        }
    })
    if ($('#impuesto').prop('checked')) {
        $('#cuentaImpuestos').show();
        $("#Detalle,#Base,#Porcentaje,#Tipo").attr("required", "true");
    }

    $('#CcuentaNIIF').change(function () {
        if (this.checked) {
            $('#cuentaNIIF').hide();
        }
        else {
            $('#cuentaNIIF').show();
        }
    })
    if ($('#CcuentaNIIF').prop('checked')) {
        $('#cuentaNIIF').hide();
    }

    //$(".botonguardar").click(function () {

    //    $.post("/Accounting/plandecuentas/Create", $("#theForma").serialize())
    //    .done(alert("posted"));

    //    //alert("click en guardar o editar");
    //})


    $("#theForm").submit(function (event) {
        event.preventDefault();
        var theForm = $(this);
        var theAction = theForm.attr("action");
        //alert(theAction);
        if (!theForm.valid()) {
            return false;
        }

        

        $.post('/accounting/plandecuentas/Create', theForm.serialize())
            .done(function (result) {
                //alert(result[0].Value);
                if (result[0].Value == "Error") {
                    swal({
                        title: "Alerta",
                        type: "info",
                        text: result[1].Value,
                    })
                } else {
                    event.preventDefault();
                    swal({
                        title: "Alerta",
                        type: "info",
                        text: "Proceso exitoso..",
                        confirmButtonText: "Ok!",
                    }, function () {
                        $("#close").click();
                    });
                }
                
                //   $('button[class=close]').trigger("click");

                // $('#centro').removeData('bs.modal')
                // alert("posted");
                //  $("#mostrar").html(result);
            });
    });


</script>