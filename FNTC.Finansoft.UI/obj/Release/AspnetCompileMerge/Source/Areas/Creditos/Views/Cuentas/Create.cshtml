@model FNTC.Finansoft.Accounting.DTO.MCreditos.Cuentas

@{
    Layout = "~/Views/Shared/_Layoutcreditos.cshtml";
}
<script src="~/Scripts/sweetalert.min.js"></script>
<link href="~/Content/css/sweetalert.css" rel="stylesheet" />
@{
    ViewBag.Title = "Crear Cuenta";
}
@using (Html.BeginForm("Create", "Cuentas", new { area = "Creditos" }, FormMethod.Post, new { id = "theForm" }))
{
    @Html.AntiForgeryToken()
    <input type="text" id="Funcion" value="" name="Funcion" hidden="hidden">
    <input type="text" id="TipoComprobante" value="" name="TipoComprobante" hidden="hidden">
    <div class="form-horizontal">
        <h4>Cuentas</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Cuenta_Cod, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Cuenta_Cod, new { htmlAttributes = new { @class = "form-control", @maxlength = 9, minlength = 9 } })
                @Html.ValidationMessageFor(model => model.Cuenta_Cod, "", new { @class = "text-danger" })

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cuenta_Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Cuenta_Descripcion, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Cuenta_Descripcion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Funcion</label>
            <div class="col-md-4">
                @Html.DropDownList("funcionCuenta", null, new { @class = "form-control", @id = "func" })
                @Html.ValidationMessageFor(model => model.Funcion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Tipo Comprobante</label>
            <div class="col-md-4">
                @Html.DropDownList("tiposComprobantes", null, new { @class = "form-control", @id="tipComp"})
                @Html.ValidationMessageFor(model => model.TipoComprobante, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="Crear" id="Crear" class="btn btn-default" />
            </div>
        </div>
    </div>
 }

<div>
    @Html.ActionLink("Regresar a la Lista", "Index")
</div>

<script>
    $('#Crear').click(function () {
        $("#Funcion").val($("#func").val());
        $("#TipoComprobante").val($("#tipComp").val());
        $('#theForm').submit();
    });

        $("#func").change(function () {
            $.ajax
            ({
                type: "POST",
                url: "@Url.Action("ValidacionFuncion", "Cuentas")",
                datatype: "Json",
                data: { func: $('#func').val() },
                success: function (data) {
                    if (data == false) {
                        swal({
                            title: "Alerta",
                            type: "info",
                            text: "La funcion seleccionada ya se encuentra asignada a otra cuenta",
                        })
                        $('#func').val("");
                    }
                }
            });
        });

    //autocomplete cuenta Contable #CAMBIOS JUN/2017
    $("#Cuenta_Cod").autocomplete({
        source: function (request, response) {
            $.ajax({
                url: "/accounting/plandecuentas/GetCuentasAA",
                //url: "/accounting/plandecuentas/GetCuentas4Selects",
                type: "POST",
                dataType: "json",
                data: {
                    term: request.term
                },
                success: function (data) {
                    response($.map(data, function (item) {
                        return { label: item.NOMBRE, value: item.CODIGO };
                    }));
                }
            });
        },
        minLength: 1,
        select: function (event, ui) {
            $('#Cuenta_Descripcion').val(ui.item.label);
            return false;
        }, change: function (event, ui) {
            if (!ui.item) {
                $(this).val("");
                $('#Cuenta_Descripcion').val("");
            }
        },
        open: function () {
            $(this).removeClass("ui-corner-all").addClass("ui-corner-top");
        },
        close: function () {
            $(this).removeClass("ui-corner-top").addClass("ui-corner-all");
        },
        focus: function (event, ui) {
            $('#Cuenta_Cod').val(ui.item.value);
            return false;
        }
    });//autocomplete cuenta Contable
</script>
