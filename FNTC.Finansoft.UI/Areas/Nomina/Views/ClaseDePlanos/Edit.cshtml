@model FNTC.Finansoft.Accounting.DTO.Nomina.ClaseDePlano

@{
    Layout = "~/Views/Shared/_Modal.cshtml";
    var action = (string)ViewBag.action;
    var boton = (string)ViewBag.boton;

    var tipoPlano = @ViewBag.TipoPlano;
    var tipoRecepcion = @ViewBag.TipoRecepcion;
    var extencion = @ViewBag.Extencion;
    var delimitador = @ViewBag.Delimitador;

}
@using (Html.BeginForm(action, "ClaseDePlano", new { area = "Nomina" }, FormMethod.Post, new { id = "theForm" }))

{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="modalheadergeneral"><h4>Actualizar Clases De Planos</h4></div>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.NOMBRE, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NOMBRE, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NOMBRE, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TIPOPLANO, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*Html.EditorFor(model => model.TIPOPLANO, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.TIPOPLANO, new SelectList(tipoPlano, "Value", "Text"), new { @class = "form-control", @required = "required", @id = "TIPOPLANO2" })
                @Html.HiddenFor(model => model.TIPOPLANO, new { @id = "TIPOPLANO1" })
                @Html.ValidationMessageFor(model => model.TIPOPLANO, "", new { @class = "text-danger" })

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TIPORECEPCION, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*Html.EditorFor(model => model.TIPORECEPCION, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.TIPORECEPCION, new SelectList(tipoRecepcion, "Value", "Text"), new { @class = "form-control", @required = "required", @id = "TIPORECEPCION2" })
                @Html.HiddenFor(model => model.TIPORECEPCION, new { @id = "TIPORECEPCION1" })
                @Html.ValidationMessageFor(model => model.TIPORECEPCION, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EXTENSION, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*Html.EditorFor(model => model.EXTENSION, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.EXTENSION, new SelectList(extencion, "Value", "Text"), new { @class = "form-control", @required = "required", @id = "EXTENSION2" })
                @Html.HiddenFor(model => model.EXTENSION, new { @id = "EXTENSION1" })
                @Html.ValidationMessageFor(model => model.EXTENSION, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DELIMITADOR, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*Html.EditorFor(model => model.DELIMITADOR, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.DELIMITADOR, new SelectList(delimitador, "Value", "Text"), new { @class = "form-control", @required = "required", @id = "DELIMITADOR2" })
                @Html.HiddenFor(model => model.DELIMITADOR, new { @id = "DELIMITADOR1" })
                @Html.ValidationMessageFor(model => model.DELIMITADOR, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-default" />
                <button type="button" id="close" class="btn btn-default" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i> Cerrar</button>
            </div>
        </div>
    </div>
}

<script>

    $(document).ready(function () {
        var EXTENSION2 = $("#EXTENSION2").val();
        if (EXTENSION2 == "EX") {
            $("#DELIMITADOR2").prop("disabled", true).val("NINGUNO");
        }
        TIPOPLANO1 = $('#TIPOPLANO1').val()
        //alert(TIPOPLANO1);
        $("#TIPOPLANO2 option[value=" + TIPOPLANO1 + "]").attr("selected", true);

        TIPORECEPCION1 = $('#TIPORECEPCION1').val()
        $("#TIPORECEPCION2 option[value=" + TIPORECEPCION1 + "]").attr("selected", true);

        EXTENSION1 = $('#EXTENSION1').val()
        $("#EXTENSION2 option[value=" + EXTENSION1 + "]").attr("selected", true);

        DELIMITADOR1 = $('#DELIMITADOR1').val()
        $("#DELIMITADOR2 option[value=" + DELIMITADOR1 + "]").attr("selected", true);
    });

    //Al Ocultar el modal
    $(document.body).on('hidden.bs.modal', function () {
        $('#centro').removeData('bs.modal');
    });
    $("#theForm").submit(function (event) {
        event.preventDefault();
        var theForm = $(this);
        var theAction = theForm.attr("action");
        if (!theForm.valid()) {
            return false;
        }
        var EXTENSION2 = $("#EXTENSION2").val();
        if (EXTENSION2 == "EX") {
            $("#DELIMITADOR2").prop("disabled", false).val("NINGUNO");
        }
        $.post('/Nomina/ClaseDePlanos/Edit', theForm.serialize())
            .done(function (result) {
                event.preventDefault();
                swal({
                    title: "OK",
                    type: "success",
                    text: "Datos Actualizados Correctamente..",
                    confirmButtonText: "Ok!",
                }, function () {
                    $("#close").click();
                });

            });
    });


</script>
<script>
    $(document).ready(function () {
        //$("#DELIMITADOR2").val("");

        $("#EXTENSION2").change(function () {


            var EXTENSION2 = $("#EXTENSION2").val();

            if (EXTENSION2 == "TP") {

                $("#DELIMITADOR2").prop("disabled", false);
                // $("#DELIMITADOR2").val("");

            }
            else
                if (EXTENSION2 == "EX") {
                    // $('#DELIMITADOR option:not(:selected)').attr('disabled', true);
                    $("#DELIMITADOR2").prop("disabled", true).val("NINGUNO");

                }
            // $('#NOMBRE').val("");

            // });
        });
    });

</script>
<script>
                $(document).ready(function () {

                 $("#NOMBRE").change(function () {


                                 $.ajax({
                                    type: "POST",
                                    url: "@Url.Action("ValidacionNombre", "ClaseDePlanos")",
                                    datatype: "Json",
                                     data: { Nombre: $('#NOMBRE').val() },
                                    success: function (data) {
                                        if (data != true) {
                                           // $("#nomCuenta").val("0");
                                            //var nomCuenta = $("#nomCuenta").val();
                                            //nomCuenta = "0";
                                    swal({
                                    title: "Alerta",
                                        type: "info",
                                        text: "Este nombre de plano ya se encuentra registrado anteriormente",
                                     })
                                            $('#NOMBRE').val("");
                                    }
                                    }
                                    });
                    });
                });

</script>

