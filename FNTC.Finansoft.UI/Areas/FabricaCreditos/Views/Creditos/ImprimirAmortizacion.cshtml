

@model IEnumerable<FNTC.Finansoft.Accounting.DTO.MCreditos.ViewModelCreditos>

<script src="~/Scripts/jquery-1.11.0.min.js"></script>
<link href="~/Content/bootstrap.min.css" rel="stylesheet" />
<script src="~/Scripts/bootstrap.min.js"></script>
<link href="~/Content/bootstrap.min.css" rel="stylesheet" />

<title>Imprimir</title>
@foreach (var item in Model)
{
    @Html.TextBoxFor(model => item.myselect, new { @id = "myselect", @style = "display: none;" })
    @Html.TextBoxFor(model => item.ValDiasInt, new { @id = "ValDiasInt", @style = "display: none;" })
    @Html.TextBoxFor(model => item.ValorSeguroPorcentaje, new { @id = "ValorSeguroPorcentaje", @style = "display: none;" })
    @Html.TextBoxFor(model => item.difdias, new { @id = "difdias", @style = "display: none;" })
    @Html.TextBoxFor(model => item.fechadesembolso, new { @id = "fechadesembolso", @style = "display: none;" })
    @Html.TextBoxFor(model => item.ValorSeguro, new { @id = "ValorSeguro", @style = "display: none;" })
    @Html.TextBoxFor(model => item.linea, new { @id = "vlinea", @style = "display: none;" })
    @Html.TextBoxFor(model => item.destino, new { @id = "vdestino", @style = "display: none;" })

    @Html.TextBoxFor(model => item.costoAdicionalEnEltiempo, new { @id = "costoAdicionalEnEltiempo", @style = "display: none;" })
    @Html.TextBoxFor(model => item.costoAdicionalAnticipado, new { @id = "costoAdicionalAnticipado", @style = "display: none;" })
    @Html.TextBoxFor(model => item.costoAdicionalPrimeraCuota, new { @id = "costoAdicionalPrimeraCuota", @style = "display: none;" })
    @Html.TextBoxFor(model => item.costoAdicionalDividoEnElTiempo, new { @id = "costoAdicionalDividoEnElTiempo", @style = "display: none;" })
    @Html.TextBoxFor(model => item.ValorPorcentajeCostoAnticipado, new { @id = "ValorPorcentajeCostoAnticipado", @style = "display: none;" })
    @Html.TextBoxFor(model => item.ValorPorcentajeCostoEnCadaCuota, new { @id = "ValorPorcentajeCostoEnCadaCuota", @style = "display: none;" })

    @Html.TextBoxFor(model => item.garatiaId, new { @id = "garatiaId", @style = "display: none;" })
    @Html.TextBoxFor(model => item.codeudorNit, new { @id = "codeudorNit", @style = "display: none;" })
    @Html.TextBoxFor(model => item.nombreCodeudor, new { @id = "nombreCodeudor", @style = "display: none;" })
    @Html.TextBoxFor(model => item.realValor, new { @id = "realValor", @style = "display: none;" })
    break;
}


<table width="100%" height="124.8" border="0">
    <tbody>
        <tr>
            <td width="100%" align="center">
                <img src="~/Areas/FormularioRetiro/Imagenes/LOGOASOPASCUALINOS.png" width="50%" height="120" alt="" />
            </td>
        </tr>

        <tr>
            <td width="100%" align="center">
                <br><b>
                    @foreach (var item in Model)
                    {
                        @Html.DisplayFor(model => item.nombreEmpresa)

                        <br />@Html.DisplayFor(model => item.nitEmpresa)
                        break;
                    }
                </b>
            </td>

        </tr>
        <tr><td><br /></td></tr>
        <tr>
            <td width="100%" align="center"><h3>AMORTIZACION</h3></td>
        </tr>
        <tr><td><br /><br /></td></tr>
    </tbody>
</table>

<table class="table table-condensed table-bordered" border="1" cellpadding="0" style="margin:0">
    <thead id="interess">
        <tr>
            <th>Nombre</th>
            <th>Cedula</th>
            <th>Celular</th>
        </tr>
    </thead>
    <tbody>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(model => item.nombreTercero)
                </td>
                <td>
                    @Html.DisplayFor(model => item.nitTercero)
                </td>
                <td>
                    @Html.DisplayFor(model => item.celularTercero)
                </td>
            </tr>
            break;
        }
    </tbody>
</table>

<table class="table table-condensed table-bordered " border="1" cellpadding="0" cellspacing="0" style="margin:0">
    <thead id="interess">
        <tr>
            <th>Linea</th>
            <th>Destino</th>
            <th>Fecha de desembolso</th>
            <th>Dias Transcurridos</th>
            <th>Valor del Interes</th>
        </tr>
    </thead>
    <tbody id="interes"></tbody>
</table>

<table class="table table-condensed table-bordered" border="1" cellpadding="0" style="margin:0">
    <thead id="tablaGarantia">
        <tr>
            <th>Tipo De Garantia</th>
            <th>Valor</th>
            <th>Codeudor</th>
        </tr>
    </thead>
    <tbody id="interes"></tbody>
</table>

<div class="table-responsive">

</div>


@*Tabla Amortizacion*@
<div id="imprimir">

    <table class="table table-condensed table-bordered" border="1" cellpadding="0">
        <thead>
            <tr>
                <th>Capital</th>
                <th>Interes</th>
                <th>Plazo</th>
                <th>Fecha Prestamo</th>
                <th>Periodo</th>
                <th>Descuentos Anticipados</th>
                <th>Total Desembolso</th>
            </tr>
        </thead>
        <tbody>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.TextBoxFor(model => item.Capital, new { @id = "Capital", @style = "display: none;" })
                        <label id="capitalseparado" />
                    </td>
                    <td>
                        @Html.TextBoxFor(model => item.Interes, new { @id = "Interes", @readonly = true, @style = "border: none;" })
                    </td>
                    <td>
                        @Html.TextBoxFor(model => item.Plazo, new { @id = "Plazo", @readonly = true, @style = "border: none;" })
                    </td>
                    <td>
                        @Html.TextBoxFor(model => item.Fecha_Prestamo, new { @id = "Fecha_Prestamo", @readonly = true, @style = "border: none;" })
                    </td>
                    <td>
                        @Html.TextBoxFor(model => item.Tipo_Periodo_Valor, new { @id = "ValorPeriodo", @readonly = true, @style = "border: none;" })
                    </td>
                    <td>
                        <label id="descuentosAnticipados" />
                    </td>
                    <td>
                        <label id="totalDesembolsado" />
                    </td>
                </tr>
                break;
            }
        </tbody>
    </table>

    <table class="table table-condensed table-bordered" border="1" cellpadding="0">

        <tr>
            <th>#</th>
            <th>Calendario de Pagos</th>
            <th>Valor Cuota</th>
            <th>Abono Capital</th>
            <th>Abono Interes</th>
            <th>Saldo Capital</th>
            <th>Valor Costo</th>
            <th>Valor Costo %</th>
        </tr>

        <tbody id="TablaAmortizacion"></tbody>
    </table>
</div>

<script>
    $(document).ready(function () {
        $("#TablaAmortizacion").empty();
        $("#interes").empty();
        var seleccion = $("#myselect").val();
        //alert(selecccion);   //No se sabe porque retorna undefined, si funciona

        var Capital = $("#Capital").val();
        var capitalseparado = formatNumberMiles.new(Capital);
        $("#capitalseparado").text(capitalseparado);
        var Interes = $("#Interes").val();
        var Plazo = $("#Plazo").val();
        var plazo = parseFloat(Plazo);
        var Periodo = $("#Tipo_Periodo_Id").val();
        var Int = parseFloat(Interes) / 100;
        var cuota = Capital * (Int / (1 - Math.pow((1 + Int), -plazo)));
        //var cuota = Capital * (Int * Math.pow((1 + Int), plazo)) / Math.pow((1 + Int), plazo - 1);
        // var Cuota = cuota.toFixed(2);
        var InteresMensual = 0;

        var ValDiasInt = $("#ValDiasInt").val();
        //alert(ValDiasInt);
        ValDiasInt = parseInt(ValDiasInt);
        //alert('ValDiasInt' + ValDiasInt);
        // Calculo de Fecha
        var Periodo = $("#ValorPeriodo").val();
        var Per = parseInt(Periodo);
        var FechaPrestamo = $("#Fecha_Prestamo").val();
        var difdias = $("#difdias").val();
        var fechadesembolso = $("#fechadesembolso").val();
        var vlinea = $("#vlinea").val();
        var vdestino = $("#vdestino").val();

        //GARANTIA
        var garatiaId = $("#garatiaId").val();
        var codeudorNit = $("#codeudorNit").val();
        var nombreCodeudor = $("#nombreCodeudor").val();
        var realValor = $("#realValor").val();
        var realValor = formatNumberMiles.new(realValor);
        //FIN GARANTIA

        var tr = $("<tr>")
            .append($("<td>", { html: vlinea }))
            .append($("<td>", { html: vdestino }))
            .append($("<td>", { html: fechadesembolso }))
            .append($("<td>", { html: difdias }))
            .append($("<td>", { html: ValDiasInt }))
        $("#interes").append(tr);

        var tablainsert = $("<tr>")
            .append($("<td>", { html: garatiaId }))
            .append($("<td>", { html: realValor }))
            .append($("<td>", { html: nombreCodeudor }))
        $("#tablaGarantia").append(tablainsert);

        var x = 0;
        var ValorPorcentajeCostoAnticipado = 0;
        var costoAdicionalAnticipado = 0;
        var ValorPorcentajeCostoEnCadaCuota = 0;
        ValorPorcentajeCostoAnticipado = $("#ValorPorcentajeCostoAnticipado").val();
        ValorPorcentajeCostoEnCadaCuota = $("#ValorPorcentajeCostoEnCadaCuota").val();
        var costoAdicionalEnEltiempo = parseInt($("#costoAdicionalEnEltiempo").val());
        var costoAdicionalAnticipado = parseInt($("#costoAdicionalAnticipado").val());
        var costoAdicionalPrimeraCuota = parseInt($("#costoAdicionalPrimeraCuota").val());
        var costoAdicionalDividoEnElTiempo = parseInt($("#costoAdicionalDividoEnElTiempo").val());
        if (costoAdicionalDividoEnElTiempo != 0) {
            costoAdicionalDividoEnElTiempo = Math.round((costoAdicionalDividoEnElTiempo / plazo), 2);
        }
        var ValorPorcentaje = $("#ValorSeguroPorcentaje").val();
        ValorPorcentajeParaTabla = 0;
        if (ValorPorcentaje != 0) {
            ValorPorcentaje = parseFloat(ValorPorcentaje) / 100;
            ValorPorcentajeParaTabla = (Capital * ValorPorcentaje);
        } else {
            ValorPorcentaje = 1;
            ValorPorcentajeParaTabla = 0;
        }
        if (ValorPorcentajeCostoEnCadaCuota != 0) {
            ValorPorcentajeCostoEnCadaCuota = parseFloat(ValorPorcentajeCostoEnCadaCuota) / 100;
            ValorPorcentajeCostoEnCadaCuota = (Capital * ValorPorcentajeCostoEnCadaCuota);
            costoAdicionalEnEltiempo = costoAdicionalEnEltiempo + ValorPorcentajeCostoEnCadaCuota;
        }
        var CapitalMenoscostoAdicionalAnticipado = Capital - costoAdicionalAnticipado;

        $("#descuentosAnticipados").text(formatNumberMiles.new(costoAdicionalAnticipado));
        $("#totalDesembolsado").text(formatNumberMiles.new(CapitalMenoscostoAdicionalAnticipado));


        var x = 0;

        //abono interes
        var AbonoInteres = 0;
        AbonoInteres = Capital * (Interes / 100);
        var AI = 0;

        //abono capital
        var AbonoCapital = 0;
        AbonoCapital = cuota - AbonoInteres;

        if (seleccion == 2 && ValDiasInt != 0) {
            costoAdicionalEnEltiempo = costoAdicionalEnEltiempo + (ValDiasInt / Plazo);
        } else if (seleccion == 3) {
            costoAdicionalPrimeraCuota = costoAdicionalPrimeraCuota + ValDiasInt;
        }

        var ValorCuota = 0;
        ValorCuota = (AbonoCapital + AbonoInteres + costoAdicionalEnEltiempo + costoAdicionalPrimeraCuota + costoAdicionalDividoEnElTiempo + ValorPorcentaje + ValorPorcentajeParaTabla);
        ValorCuotaSinCostoAdicionalPrimeraCuota = (AbonoCapital + AbonoInteres + costoAdicionalEnEltiempo + costoAdicionalDividoEnElTiempo + ValorPorcentaje);
        var ValorCostoFijo = costoAdicionalEnEltiempo + costoAdicionalPrimeraCuota + costoAdicionalDividoEnElTiempo;
        var ValorCostoFijoSinCostoPrimeraCuotaSinInteresAnticipado = costoAdicionalEnEltiempo + costoAdicionalDividoEnElTiempo;
        var SaldoCapital = 0;
        SaldoCapital = Capital - AbonoCapital;
        SC = 0;

        for (i = 1; i <= plazo; i++) {

            InteresMensual = Math.round((Int * Capital), 2);
            Capital = Math.round(Capital - cuota + InteresMensual, 2);

            x = x + Per;
            var PrimerP = sumaFecha(x, FechaPrestamo)
            //Acumulado de Intereses
            var tr = $("<tr>")
                .append($("<td>", { html: i }))
                .append($("<td>", { html: PrimerP }))
                .append($("<td>", { html: formato_numero(ValorCuota.toFixed(0), 0, ".", ".") }))
                .append($("<td>", { html: formato_numero(AbonoCapital.toFixed(0), 0, ".", ".") }))
                .append($("<td>", { html: formato_numero(AbonoInteres.toFixed(0), 0, ".", ".") }))
                .append($("<td>", { html: formato_numero(SaldoCapital.toFixed(0), 0, ".", ".") }))
                .append($("<td>", { html: formato_numero(ValorCostoFijo.toFixed(0), 0, ".", ".") }))
                .append($("<td>", { html: formato_numero(ValorPorcentajeParaTabla.toFixed(0), 0, ".", ".") }))

            $("#TablaAmortizacion").append(tr);
            AbonoInteres = SaldoCapital * Int;
            AbonoCapital = cuota - AbonoInteres;
            SaldoCapital = SaldoCapital - AbonoCapital;
            ValorCostoFijo = ValorCostoFijoSinCostoPrimeraCuotaSinInteresAnticipado;
            if (ValorPorcentajeParaTabla != 0) {
                ValorPorcentajeParaTabla = SaldoCapital * ValorPorcentaje;
            }
            ValorCuota = AbonoCapital + AbonoInteres + ValorCostoFijo + ValorPorcentajeParaTabla;
        }
    })
</script>
<script>
    function formato_numero(numero, decimales, separador_decimal, separador_miles) { // v2007-08-06
        numero = parseFloat(numero);
        if (isNaN(numero)) {
            return "";
        }

        if (decimales !== undefined) {
            // Redondeamos
            numero = numero.toFixed(decimales);
        }

        // Convertimos el punto en separador_decimal
        numero = numero.toString().replace(".", separador_decimal !== undefined ? separador_decimal : ",");

        if (separador_miles) {
            // Añadimos los separadores de miles
            var miles = new RegExp("(-?[0-9]+)([0-9]{3})");
            while (miles.test(numero)) {
                numero = numero.replace(miles, "$1" + separador_miles + "$2");
            }
        }

        return numero;
    }




    //Funcion que suma la cantidad de dias en javascript
    sumaFecha = function (d, fecha) {
        var Fecha = new Date();
        var sFecha = fecha || (Fecha.getDate() + "/" + (Fecha.getMonth() + 1) + "/" + Fecha.getFullYear());
        var sep = sFecha.indexOf('/') != -1 ? '/' : '-';
        var aFecha = sFecha.split(sep);
        var fecha = aFecha[2] + '/' + aFecha[1] + '/' + aFecha[0];
        fecha = new Date(fecha);
        fecha.setDate(fecha.getDate() + parseInt(d));
        var anno = fecha.getFullYear();
        var mes = fecha.getMonth() + 1;
        var dia = fecha.getDate();
        mes = (mes < 10) ? ("0" + mes) : mes;
        dia = (dia < 10) ? ("0" + dia) : dia;
        var fechaFinal = dia + sep + mes + sep + anno;
        return (fechaFinal);
    }
    //swal("Good job!", "You clicked the button!", "success")
</script>

<script>
    //FORMATEAR UN NUMERO
    var formatNumberMiles = {
        separador: ".", // separador para los miles
        sepDecimal: ',', // separador para los decimales
        formatear: function (num) {
            num += '';
            var splitStr = num.split('.');
            var splitLeft = splitStr[0];
            var splitRight = splitStr.length > 1 ? this.sepDecimal + splitStr[1] : '';
            var regx = /(\d+)(\d{3})/;
            while (regx.test(splitLeft)) {
                splitLeft = splitLeft.replace(regx, '$1' + this.separador + '$2');
            }
            return this.simbol + splitLeft + splitRight;
        },
        new: function (num, simbol) {
            this.simbol = simbol || '';
            return this.formatear(num);
        }
    }
        //FIN FORMATEAR UN NUMERO
    /*
     * FUNCIONALIDAD DE LA 'FUNCION'
    formatNumber.new(123456779.18, "$") // retorna "$123.456.779,18"
    formatNumber.new(123456779.18) // retorna "123.456.779,18"
    formatNumber.new(123456779) // retorna "$123.456.779"
    */

</script>