@{
    ViewBag.Title = "ObtenerCreditos";
    Layout = "~/Views/Shared/_Layoutcreditos.cshtml";
}
<script src="~/Scripts/sweetalert.min.js"></script>
<link href="~/Content/css/sweetalert.css" rel="stylesheet" />
<div class="container" style="margin-top:2%; background: rgb(248, 248, 248);">
    <!--<div class="col-md-1">
        <a class="" href="/Aportes/Aportes/Index" title="Atras">
            <i class="fa fa-arrow-circle-o-left fa-2x " aria-hidden="true">Volver</i>
        </a>
    </div>-->

    <ul class="col-md-offset-2 nav nav-tabs" style="margin-top:0%;border: none; margin-left: 2%;">
        <li class="active"><a href="/Creditos/Creditos" class="tabsnota"><i class="fa fa-file-text" aria-hidden="true"></i> Creditos </a></li>
        <li><a href="/Creditos/Prestamos" class="tabsnota"><i class="fa fa-file-text" aria-hidden="true"></i> Prestamos </a></li>
        <li><a href="#" class="tabsnota"><i class="fa fa-file-text" aria-hidden="true"></i> Reportes </a></li>
        <li><a href="/Creditos/Lineas" class="tabsnota"><i class="fa fa-file-text" aria-hidden="true"></i> Configuraciones </a></li>
        <li><a href="/Creditos/Documentos/DocumentacionACP" class="tabsnota"><i class="fa fa-file-text" aria-hidden="true"></i> Documentos </a></li>
        <li><a href="/Creditos/solicitudCreditos" class="tabsnota"><i class="fa fa-file-text" aria-hidden="true"></i> Solicitud Creditos </a></li>
        <li><a href="/Creditos/FormularioSolicitudMicrocredito/Index" class="tabsnota"><i class="fa fa-file-text" aria-hidden="true"></i> Formulario Solicitud de Microcredito </a></li>
        <li><a href="/Creditos/Certificados" class="tabsnota"><i class="fa fa-file-text" aria-hidden="true"></i> Certificados </a></li>
    </ul>
    <div class="tab-content contenedortabs">
        <div id="menu1" class="tab-pane fade in active">
            <div class="col-md-12"><h3 style="border-bottom: 5px solid #2B7785 !important; width: 100%; color: #2B7785 !important; padding: 9px 20px 15px 0px !important;margin-bottom: 31px !important;">Procesos - Creditos</h3></div>
            <div class="col-md-12">

                <div style="width:100%; margin:0 auto" class="tablecontainer">
                    @*<a class="popup btn btn-primary" href="/home/save/0" style="margin-bottom:20px; margin-top:20px;">Add New Employee</a>*@
                    <table id="tablaCreditos" cellpadding="0" cellspacing="0" border="0" class="table table-striped table-bordered table-condensed">
                        <thead>
                            <tr>
                                <th>Id</th>
                                <th>NIT</th>
                                <th>NOMBRE</th>
                                <th>PAGARE</th>
                                <th>Fecha Creacion</th>
                                <th>Valor del Prestamo</th>
                                <th>Plazo</th>
                                <th>Interes</th>
                                <th>Amortizacion</th>
                                <th>Desembolso</th>
                                <th>Estado</th>
                            </tr>
                        </thead>
                    </table>
                </div>

                <div class="modal fade" id="detailsAssetModal" tabindex="-1" role="dialog" aria-labelledby="DetailsAssetModal" aria-hidden="true" data-backdrop="static">
                    <input type="text" id="alertaComprobante" value=@ViewBag.alerta hidden="hidden">
                    <div id="detailsAssetContainer">

                    </div>
                </div>

                <div class="modal fade" id="desembolsoModal" tabindex="-1" role="dialog" aria-labelledby="desembolsoModal" aria-hidden="true" data-backdrop="static">

                    <div id="desembolsoContainer">

                    </div>
                </div>

            </div>

        </div><!--MENU-->
    </div><!--CONTENEDOR TABS-->

</div>

@section Scripts{

    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

    <script>
        //datatables
        //lineas credito
        //var columnas = [
        //{ data: "Id" },
        //{ data: "Pagare" },
        //{ data: "Fecha_Inicio", render: function (data) { return FormatoFecha(data); } },
        //{ data: "Fecha_Fin", render: function (data) { return FormatoFecha(data); } },
        //{ data: "MontoDesembolso" },
        //{ data: "NumeroCuotas" },
        //];

        var columnas = [
        { data: "id" },
      //{ data: "Fecha_Fin", render: function (data) { return FormatoFecha(data); } },
        { data: "NIT" },
        { data: "NOMBRE" },
        { data: "Pagare" },
        { data: "Fecha_Prestamo" },
        { data: "Capital", "width": "90px", "render": function (data) { return formatNumberMiles.new(data);} },
        { data: "Plazo" },
        { data: "Interes" },
        { data: "id", "width": "50px", "render": function (data) { return ' <a href="@Url.Action("_Amortizacion", "Creditos")?id=' + data + '" class="detailsAsset btn btn-info btn-xs">Amortizacion</a>'; } },
        { data: "id", "width": "50px", "render": function (data) { return '<a href="@Url.Action("_Desembolso", "Creditos")?id=' + data + '" class="desembolso btn btn-warning btn-xs">Desembolsar</a>'; } },
        { data: "estado", "render": function (data) { return estado(data); } },
        ];

        function estado(estado) {
            if (estado == false) {
                return '<button class="btn btn-danger btn-xs">Por Desembolsar</button>';
            } else {
                return '<button class="btn btn-success btn-xs">Desembolsado</button>';
            }
        }

        function retornar(data) {
            var c = 1;
            $.ajax({
                    type: "POST",
                    url: "@Url.Action("ComprobarDesembolso", "Creditos")",
                    datatype: "Json",
                    data: { id: data },//solo para enviar datos
                    success: function (ret) {
                        c = ret;
                    }
            });

            if (c == 0) {
                return '<a href="@Url.Action("_Desembolso", "Creditos")?id=' + data + '" class="desembolso btn btn-warning btn-xs">Desembolsar</a>';
            } else {
                return '';
            }
        }

        var botones = [
            //{
            //    text: "Nueva Credito",
            //    action: function () {
            //        //  location.href = "/CreditosIngenio/Credito/Create";
            //    }
            //},
            {
                extend: 'collection',
                text: 'Exportar A',
                autoClose: true,
                buttons: [
                    {
                        extend: 'excel',
                        text: "Excel",
                        exportOptions: {
                            columns: [1, 2, 3, 4, 5, 6, 7]
                        }
                        //},
                        //{
                        //    extend: 'pdf',
                        //    text: "PDF",
                        //    exportOptions: {
                        //        columns: ':visible'
                        //    }
                        //},
                        //{
                        //    extend: 'print',
                        //    text: "Imprimir",
                        //    exportOptions: {
                        //        columns: ':visible'
                        //    }
                    }
                ]
            }
        ];
        agregarDataTable("#tablaCreditos", columnas, '/Creditos/Creditos/ObtenerCreditos', botones, false, true, true);
        table.columns(0).visible(false);

        function agregarDataTable(tabla, columnas, urlDatos, botones, scroll, buscador, seleccion) {
            var TraduccionDatatable = {
                "sProcessing": "Procesando...", "sLengthMenu": "Mostrar _MENU_ registros", "sZeroRecords": "No se encontraron resultados", "sEmptyTable": "No hay registros", "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros", "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros", "sInfoFiltered": "(filtrado de un total de _MAX_ registros)", "sInfoPostFix": "", "sSearch": "Buscar:", "sUrl": "", "sInfoThousands": ",", "sLoadingRecords": "Cargando...", "select": { "rows": { _: "Has seleccionado %d filas", 0: "", 1: "1 fila seleccionada" } }, "oPaginate": { "sFirst": "<<", "sLast": ">>", "sNext": ">", "sPrevious": "<" }, "oAria": { "sSortAscending": ": Activar para ordenar la columna de manera ascendente", "sSortDescending": ": Activar para ordenar la columna de manera descendente" }
            };
            // iris2 = iris[c(1;10, 51:60, 101:110), ]
            table = $(tabla).DataTable({
                dom: 'Bfrtip',
                ajax: {
                    type: "POST",
                    url: urlDatos,
                    contentType: 'application/json; charset=utf-8',
                    data: function (data) { return data = JSON.stringify(data); }
                },
                searching: buscador,
                lengthChange: false,
                autoWidth: false,
                scrollX: scroll,
                columns: columnas,
                buttons: botones,
                deferRender: true,
                select: seleccion,
                language: TraduccionDatatable
            });
            table.buttons().container().appendTo('.col-sm-6:eq(0)');
        }

        //desde

        //fin desde


        function FormatoFecha(Jsonfecha) {
            var value = new Date
            (
                 parseInt(Jsonfecha.replace(/(^.*\()|([+-].*$)/g, ''))
            );
            var dat = value.getDate() +
                                   "/" +
                (value.getMonth() + 1) +
                                   "/" +
                   value.getFullYear() +
                                   " " +
                      value.getHours() +
                                   ":" +
                    value.getMinutes() +
                                   ":" +
                   value.getSeconds();
            return dat;
        }

        $('#tablaCreditos').on("click", ".detailsAsset", function (event) {

            event.preventDefault();

            var url = $(this).attr("href");



            //$.ajax({
            //    type: "POST",
            //    url: "/Creditos/_Amortizacion",
            //    data: '{id: "' + urlx + '" }',
            //    contentType: "application/json; charset=utf-8",
            //    dataType: "html",
            //    success: function (response) {
            //        $('#detailsAssetContainer').html(response);
            //        $('#detailsAssetModal').modal('show');
            //    }
            //});
            // alert(url);


            $.get(url, function (data) {


                $('#detailsAssetContainer').html(data);

                $('#detailsAssetModal').modal('toggle');
            });



        });

        // funcion para mostrar ventana modal de desembolso

        $('#tablaCreditos').on("click", ".desembolso", function (event) {

            event.preventDefault();

            var url = $(this).attr("href");


            $.get(url, function (data) {


                $('#desembolsoContainer').html(data);

                $('#desembolsoModal').modal('toggle');
            });



        });



    </script>

    <script>
        $(document).ready(function () {
            if ($("#alertaComprobante").val() == "true") {
                swal({
                    title: "Alerta",
                    type: "error",
                    text: "No existe el Tipo de Comprobante",
                })
            }
        });
    </script>

    <script>
        //FORMATEAR UN NUMERO
        var formatNumberMiles = {
            separador: ".", // separador para los miles
            sepDecimal: ',', // separador para los decimales
            formatear: function (num) {
                num += '';
                var splitStr = num.split('.');
                var splitLeft = splitStr[0];
                var splitRight = splitStr.length > 1 ? this.sepDecimal + splitStr[1] : '';
                var regx = /(\d+)(\d{3})/;
                while (regx.test(splitLeft)) {
                    splitLeft = splitLeft.replace(regx, '$1' + this.separador + '$2');
                }
                return this.simbol + splitLeft + splitRight;
            },
            new: function (num, simbol) {
                this.simbol = simbol || '';
                return this.formatear(num);
            }
        }
        //FIN FORMATEAR UN NUMERO
        /*
        * FUNCIONALIDAD DE LA 'FUNCION'
        formatNumber.new(123456779.18, "$") // retorna "$123.456.779,18"
        formatNumber.new(123456779.18) // retorna "123.456.779,18"
        formatNumber.new(123456779) // retorna "$123.456.779"
        */
        //ACCESO A LA VARIABLE
    </script>

}
