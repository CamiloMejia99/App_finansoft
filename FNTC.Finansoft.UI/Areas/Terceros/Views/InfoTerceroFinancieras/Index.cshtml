@model IEnumerable<FNTC.Finansoft.Accounting.DTO.Terceros.InfoTerceroFinanciera>

@{
    ViewBag.Title = "Datos Financieros";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/Content/datatables.boostrap.min.css" rel="stylesheet" />
<script src="~/Scripts/datatable.js"></script>
<link href="~/Content/font-awesome.min.css" rel="stylesheet" />
<script src="~/Content/tools/direccion/Nomemclaturas.min.js"></script>
<div class="container" style="margin-top:2%; background: rgb(248, 248, 248);">

    <ul class="col-md-offset-2 nav nav-tabs" style="margin-top:0%;border: none; margin-left: 2%;">
        <li><a href="/Terceros/TercerosAdicionales" class="tabsnota"><i class="fa fa-file-text" aria-hidden="true"></i> Terceros Datos Adicionales</a></li>
        <li class="active"><a href="#" class="tabsnota"><i class="fa fa-file-text" aria-hidden="true"></i>Terceros Datos Financieros </a></li>

    </ul>



    <div class="tab-content contenedortabs">
        <div id="menu1" class="tab-pane fade in active">
            <div class="col-md-12"><h3 style="border-bottom: 5px solid #2B7785 !important; width: 100%; color: #2B7785 !important; padding: 9px 20px 15px 0px !important;margin-bottom: 31px !important;">Datos Financieros Terceros</h3></div>
            <div class="col-md-12">
                <div class="col m-5">
                    <br />
                    <a href="/Dashboard/Default" class="btn btn-primary" data-toggle="modal">
                        Regresar
                    </a>
                    <a href="/Terceros/InfoTerceroFinancieras/create" class="btn btn-primary" data-toggle="modal">
                        Crear
                    </a>
                </div>
                <br />

                <div class="table-responsive col-md-12">
                    <div class="col-md-12">
                        <table id="TablaTercerosFinanciera" class="table table-striped table-bordered dataTable no-footer" cellspacing="0" width="100%">
                            <thead>
                                <tr>
                                    <th class="columnatablaazul2">Nit</th>
                                    <th class="columnatablaazul2">Nombre</th>
                                    <th class="columnatablaazul">Ingresos Mensuales</th>
                                    <th class="columnatablaazul">Gastos Mensuales</th>
                                    <th class="columnatablaazul2">Activos </th>
                                    <th class="columnatablaazul">Pasivos</th>
                                    <th class="columnatablaazul">Editar</th>
                                    <th class="columnatablaazul">Borrar</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>


            </div>

        </div>

    </div>

</div>

<script>

    var columnas = [
        { data: "Nit" },
        { data: "Nombre" },
        { data: "Ingresos_Mensuales", "width": "90px", "render": function (data) { return formatNumberMiles.new(data); } },
        { data: "Gastos_Mensuales" },
        { data: "Activos" },
        { data: "Pasivos", "width": "90px", "render": function (data) { return formatNumberMiles.new(data); } },
        { data: "Editar" },
        { data: "Eliminar" } ,
        ];

</script>
<script type="text/javascript" class="init">
    $(document).ready(function () {
        $('#TablaTercerosFinanciera').dataTable({
            "ajaxSource": '../terceros/InfoTerceroFinancieras/GetTercerosFinanciera',
            "language": {
                "url": "//cdn.datatables.net/plug-ins/1.10.12/i18n/Spanish.json"
               
            }
        });
    });
</script>

<script>
    //FORMATEAR UN NUMERO
    
    var formatNumberMiles = {
        separador: ".", // separador para los miles
        sepDecimal: ',', // separador para los decimales
        formatear: function (num) {
            num += '';
            var splitStr = num.split('.');
            var splitLeft = splitStr[0];
            var splitRight = splitStr.length > 1 ? this.sepDecimal + splitStr[1] : '';
            var regx = /(\d+)(\d{3})/;
            while (regx.test(splitLeft)) {
                splitLeft = splitLeft.replace(regx, '$1' + this.separador + '$2');
            }
            return this.simbol + splitLeft + splitRight;
        },
        new: function (num, simbol) {
            this.simbol = simbol || '';
            return this.formatear(num);
        }
    }
   
</script>





